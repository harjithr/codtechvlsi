module ALU (
    input  [3:0] A,     // 4-bit input A
    input  [3:0] B,     // 4-bit input B
    input  [2:0] SEL,   // 3-bit selector
    output reg [3:0] OUT,
    output reg CARRY
);
    always @(*) begin
        case (SEL)
            3'b000: {CARRY, OUT} = A + B;        // ADD
            3'b001: {CARRY, OUT} = A - B;        // SUB
            3'b010: OUT = A & B;                 // AND
            3'b011: OUT = A | B;                 // OR
            3'b100: OUT = ~A;                    // NOT (only A)
            default: OUT = 4'b0000;
        endcase
    end
endmodule
